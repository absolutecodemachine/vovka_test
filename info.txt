Документация для кода: Анализатор данных матчей 
Описание

Программа предназначена для обработки данных матчей, поступающих от двух источников: Sansabet и Pinnacle, с последующим объединением информации, поиском совпадений и передачей данных клиентам через WebSocket. Программа позволяет связать матчи из двух источников, анализировать данные, рассчитывать ROI и передавать результаты клиентам.
Архитектура
Источники данных:

    Sansabet: Порт 7100
    Pinnacle: Порт 7200

Клиентский фронтенд:

    Порт 7300

Основные модули:

    Парсинг данных матчей.
    Сохранение данных во временное хранилище (matchData).
    Сопоставление матчей между двумя источниками.
    Анализ данных, расчёт ROI и фильтрация по порогам.
    Передача результатов клиентам через WebSocket.

Главные функции
1. initDB()

    Инициализирует подключение к базе данных.
    DSN: matchingTeams:local_password@tcp(localhost:3306)/matchingTeams.
    Проверяет доступность базы через Ping().
    Логирует успешное подключение или ошибку.

2. startAnalyzer()

    Запускает обработчики данных:
        Сервер для Sansabet: Порт 7100.
        Сервер для Pinnacle: Порт 7200.
        Сервер для фронтенда: Порт 7300.
        Запускает фоновую обработку пар матчей через processPairs().

3. Сервер для источников данных: startParserServer(port, sourceName)

    Параметры:
        port: Порт, на котором работает сервер.
        sourceName: Название источника (Sansabet или Pinnacle).
    Функционал:
        Принимает данные от источников через WebSocket.
        Обрабатывает сообщения через saveMatchData().

4. Обработка данных: saveMatchData(name, msg)

    Функционал:
        Парсит сообщение через parseMessage().
        Проверяет наличие команд в базе (ensureTeamsExist()).
        Связывает команды с Pinnacle через linkTeamsForMatch().
        Обновляет пары матчей, если связь найдена, через updateMatchPairs().

5. Сопоставление матчей: updateMatchPairs(parsedMsg)

    Функционал:
        Проверяет связь с Pinnacle для команд.
        Создает пару матчей (matchPairs), если хотя бы одна команда связана с Pinnacle.
        Получает данные для обоих источников (Sansabet и Pinnacle) для расчета ROI.
        Уникальные пары добавляются в matchPairs.

6. Генерация ключа: generateMatchKey(home, away)

    Генерирует уникальный ключ для пары команд (домашняя и гостевая) на основе SHA-1 хэша.

7. Анализ пар матчей: processPairs()

    Запускает анализатор в цикле:
        Удаляет устаревшие данные из matchData по TTL (60 секунд).
        Анализирует пары через groupResultsByMatch().
        Рассылает результаты клиентам через forwardToFrontendBatch().

8. ROI-расчет и фильтрация:

    calculateROI(sansaOdd, pinnacleOdd):
        Рассчитывает ROI для сопоставленных данных.
        Учитывает дополнительные проценты и коэффициенты.

    calculateAndFilterCommonOutcomes():
        Находит общие исходы для пары.
        Фильтрует исходы, где ROI превышает установленный порог.

Структура данных
ParsedMessage

    MatchId: Уникальный идентификатор матча.
    MatchName: Название матча.
    Home: Название домашней команды.
    Away: Название гостевой команды.

MatchPair

    SansabetId: Идентификатор матча Sansabet.
    PinnacleId: Идентификатор матча Pinnacle.
    SansabetName / PinnacleName: Названия матчей.
    SansabetHome / PinnacleHome: Названия домашних команд.
    SansabetAway / PinnacleAway: Названия гостевых команд.

Порты

    7100: Прием данных от парсера Sansabet.
    7200: Прием данных от парсера Pinnacle.
    7300: Передача данных клиентам фронтенда.

Логирование

    [DEBUG]: Основные действия программы.
    [ERROR]: Ошибки обработки данных.
    [DRON]: Логирование для отладки поиска команд.
    [ZAEB]: Логирование ключевых этапов обработки матчей.

Нововведения:

    Обновлен механизм проверки связи команд:
        Добавлены функции findMissingTeamInMatchData и getPinnacleIdDirectly.

    Улучшен процесс фильтрации исходов:
        Реализована сортировка исходов по ROI.

    TTL данных увеличен до 60 секунд.

    Логирование стало более детализированным:
        Новые логи для поиска команд и связывания данных.

    Обработка ошибок в ключевых функциях:
        Расширен механизм обработки ошибок для запросов к базе данных и парсинга JSON.

Как запустить?

    Настройте базу данных и убедитесь, что она доступна.
    Убедитесь, что парсеры Sansabet и Pinnacle отправляют данные в правильном формате.
    Запустите приложение.
    Отправляйте данные на порты 7100 и 7200.
    Подключитесь к фронтенд-серверу на порту 7300 для получения результатов.